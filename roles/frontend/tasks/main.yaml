# - name: Disable the default nginx module
#   ansible.builtin.shell: dnf module disable nginx -y

# # dnf:
# #   name: nginx
# #   state: absent
# #   module: nginx
# #   disable: yes

# - name: Enable the default nginx module 1.24
#   ansible.builtin.shell: dnf module enable nginx:1.24 -y

# - name: Install nginx
#   dnf:
#     name: nginx
#     state: installed

# - name: Copy the nginx config file
#   ansible.builtin.copy:
#     src: nginx.conf
#     dest: /etc/nginx/nginx.conf

# - name: Remove the nginx default content
#   ansible.builtin.file:
#     path: /usr/share/nginx/html
#     state: absent

# - name: Create the nginx html directory
#   ansible.builtin.file:
#     path: /usr/share/nginx/html
#     state: directory

# - name: Download the nginx content
#   ansible.builtin.unarchive:
#     src: https://roboshop-artifacts.s3.amazonaws.com/frontend-v3.zip
#     dest: /usr/share/nginx/html/
#     remote_src: yes

# - name: Enable and start nginx
#   ansible.builtin.service:
#     name: nginx
#     state: started
#     enabled: yes

- name: Load Docker
  ansible.builtin.import_role:
    name: common
    tasks_from: docker

- name: Launch Docker Container
  ansible.builtin.docker_container:
    name: frontend
    image: public.ecr.aws/w8x4g9h7/roboshop-v3/frontend
    ports:
      - "80:80"
    env:
      CATALOGUE_HOST: catalogue-dev.gurudevops4.online
      CATALOGUE_PORT: "8080"
      CART_HOST: cart-dev.gurudevops4.online
      CART_PORT: "8080"
      USER_HOST: user-dev.gurudevops4.online
      USER_PORT: "8080"
      SHIPPING_HOST: shipping-dev.gurudevops4.online
      SHIPPING_PORT: "8080"
      PAYMENT_HOST: payment-dev.gurudevops4.online
      PAYMENT_PORT: "8080"
      